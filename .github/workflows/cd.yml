name: Build and publish

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/cosmian/saas_applications_examples

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build staging docker
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:staging
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_BACKEND_URL=${{ vars.VITE_STAGING_BACKEND_URL }}
            VITE_AUTH0_DOMAIN=${{ vars.VITE_AUTH0_DOMAIN }}
            VITE_AUTH0_CUSTOM_DOMAIN=${{ vars.VITE_AUTH0_CUSTOM_DOMAIN }}
            VITE_AUTH0_CLIENT_ID=${{ vars.VITE_AUTH0_CLIENT_ID }}

      - name: Build prod docker
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:prod
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_BACKEND_URL=${{ vars.VITE_PROD_BACKEND_URL }}
            VITE_AUTH0_DOMAIN=${{ vars.VITE_AUTH0_DOMAIN }}
            VITE_AUTH0_CUSTOM_DOMAIN=${{ vars.VITE_AUTH0_CUSTOM_DOMAIN }}
            VITE_AUTH0_CLIENT_ID=${{ vars.VITE_AUTH0_CLIENT_ID }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: On staging env
        env:
          REMOTE_URL: developer-example.staging.cosmian.com
          DOCKER_COMPOSE_FILE: saas_applications_examples/staging/docker-compose.yml
        run: |
          ssh cosmian@${REMOTE_URL} docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p "${{ secrets.GITHUB_TOKEN }}"
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} pull
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} -p saas_applications_examples_staging down
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} -p saas_applications_examples_staging up -d
          ssh cosmian@${REMOTE_URL} service nginx status
          ssh cosmian@${REMOTE_URL} docker system prune -f

      - name: On prod env
        env:
          REMOTE_URL: developer-example.cosmian.com
          DOCKER_COMPOSE_FILE: saas_applications_examples/prod/docker-compose.yml
        run: |
          ssh cosmian@${REMOTE_URL} docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p "${{ secrets.GITHUB_TOKEN }}"
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} pull
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} -p saas_applications_examples_prod down
          ssh cosmian@${REMOTE_URL} docker-compose -f ${DOCKER_COMPOSE_FILE} -p saas_applications_examples_prod up -d
          ssh cosmian@${REMOTE_URL} service nginx status
          ssh cosmian@${REMOTE_URL} docker system prune -f
